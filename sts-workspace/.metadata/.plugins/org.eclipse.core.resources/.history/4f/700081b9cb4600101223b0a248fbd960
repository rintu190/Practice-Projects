package geeksForGeeks;

public class ArraySearchSortedRotated {

	public static void main(String[] args) {
		int[] arr = {5,6,7,8,9,10,1,2,3};
		int key = 3;
//		int result = doubleBinarySearch(arr,key);
		int result = singleBinarySearch(arr,key);
		System.out.println(result);
	}

	private static int singleBinarySearch(int[] arr, int key) {
		// TODO Auto-generated method stub
		return -1;
	}

	private static int doubleBinarySearch(int[] arr, int key) {
		int n = arr.length;
		int pivot = findPivot(arr,0,n - 1);
		
		if(arr[pivot] == key)
			return pivot;
		if(arr[pivot] == 0)
			return binarySearch(arr,0,n - 1,key);
		if(arr[0] <= key)
			return binarySearch(arr,0,pivot - 1,key);
		return binarySearch(arr,pivot + 1,n - 1,key);
	}

	private static int binarySearch(int[] arr, int low, int high, int key) {
		while(low <= high) {
			int mid = low + (high-low)/2;
			if(arr[mid] == key)
				return mid;
			if(arr[mid] < key)
				low = mid + 1;
			else
				high = mid -1;
		}
		return -1;
	}

	private static int findPivot(int[] arr, int low, int high) {
		while(low < high) {
			if(arr[low] <= arr[high])
				return low;
			int mid = (low + high)/2;
			if(arr[mid] > arr[high])
				low = mid + 1;
			else
				high = mid;
		}
		return low;
	}

}
